/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Error;
import org.openapitools.model.PriceEstimate;
import org.openapitools.model.Product;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-04-18T08:41:53.427+03:00[Asia/Riyadh]")

@Validated
@Api(value = "estimates", description = "the estimates API")
public interface EstimatesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /estimates/price : Price Estimates
     * The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.&lt;br&gt;&lt;br&gt;The response also includes low and high estimates, and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion. When surge is active for a particular product, its surge_multiplier will be greater than 1, but the price estimate already factors in this multiplier.
     *
     * @param startLatitude Latitude component of start location. (required)
     * @param startLongitude Longitude component of start location. (required)
     * @param endLatitude Latitude component of end location. (required)
     * @param endLongitude Longitude component of end location. (required)
     * @return An array of price estimates by product (status code 200)
     *         or Unexpected error (status code 200)
     */
    @ApiOperation(value = "Price Estimates", nickname = "estimatesPriceGet", notes = "The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.<br><br>The response also includes low and high estimates, and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion. When surge is active for a particular product, its surge_multiplier will be greater than 1, but the price estimate already factors in this multiplier.", response = PriceEstimate.class, responseContainer = "List", tags={ "Estimates", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An array of price estimates by product", response = PriceEstimate.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/estimates/price",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<PriceEstimate>> estimatesPriceGet(@NotNull @ApiParam(value = "Latitude component of start location.", required = true) @Valid @RequestParam(value = "start_latitude", required = true) Double startLatitude,@NotNull @ApiParam(value = "Longitude component of start location.", required = true) @Valid @RequestParam(value = "start_longitude", required = true) Double startLongitude,@NotNull @ApiParam(value = "Latitude component of end location.", required = true) @Valid @RequestParam(value = "end_latitude", required = true) Double endLatitude,@NotNull @ApiParam(value = "Longitude component of end location.", required = true) @Valid @RequestParam(value = "end_longitude", required = true) Double endLongitude) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"high_estimate\" : 6.027456183070403, \"product_id\" : \"product_id\", \"low_estimate\" : 0.8008281904610115, \"surge_multiplier\" : 1.4658129805029452, \"estimate\" : \"estimate\", \"display_name\" : \"display_name\", \"currency_code\" : \"currency_code\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /estimates/time : Time Estimates
     * The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
     *
     * @param startLatitude Latitude component of start location. (required)
     * @param startLongitude Longitude component of start location. (required)
     * @param customerUuid Unique customer identifier to be used for experience customization. (optional)
     * @param productId Unique identifier representing a specific product for a given latitude &amp; longitude. (optional)
     * @return An array of products (status code 200)
     *         or Unexpected error (status code 200)
     */
    @ApiOperation(value = "Time Estimates", nickname = "estimatesTimeGet", notes = "The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.", response = Product.class, responseContainer = "List", tags={ "Estimates", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An array of products", response = Product.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class) })
    @RequestMapping(value = "/estimates/time",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Product>> estimatesTimeGet(@NotNull @ApiParam(value = "Latitude component of start location.", required = true) @Valid @RequestParam(value = "start_latitude", required = true) Double startLatitude,@NotNull @ApiParam(value = "Longitude component of start location.", required = true) @Valid @RequestParam(value = "start_longitude", required = true) Double startLongitude,@ApiParam(value = "Unique customer identifier to be used for experience customization.") @Valid @RequestParam(value = "customer_uuid", required = false) UUID customerUuid,@ApiParam(value = "Unique identifier representing a specific product for a given latitude & longitude.") @Valid @RequestParam(value = "product_id", required = false) String productId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"image\" : \"image\", \"product_id\" : \"product_id\", \"description\" : \"description\", \"display_name\" : \"display_name\", \"capacity\" : \"capacity\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
